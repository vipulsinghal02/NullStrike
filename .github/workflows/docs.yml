name: Build and Deploy Documentation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: read
  pages: write
  id-token: write
  actions: read  # Added for better GitHub Actions integration

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for git info

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-docs-${{ hashFiles('requirements-docs.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-docs-
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-docs.txt

      - name: Setup Pages (with error handling)
        if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
        id: pages
        continue-on-error: true
        uses: actions/configure-pages@v4

      - name: Get Pages URL (fallback)
        if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request' && steps.pages.outcome == 'failure'
        id: pages-fallback
        run: |
          echo "Pages setup failed, using repository-based URL"
          echo "base_url=https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/" >> $GITHUB_OUTPUT

      - name: Configure MkDocs site_url
        if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
        run: |
          if [ "${{ steps.pages.outcome }}" == "success" ]; then
            SITE_URL="${{ steps.pages.outputs.base_url }}"
          else
            SITE_URL="${{ steps.pages-fallback.outputs.base_url }}"
          fi
          echo "Using site URL: $SITE_URL"
          # Update mkdocs.yml if it exists with the correct site_url
          if [ -f mkdocs.yml ]; then
            sed -i "s|site_url:.*|site_url: $SITE_URL|" mkdocs.yml
          fi

      - name: Build documentation
        run: |
          echo "Building MkDocs documentation..."
          mkdocs build --clean --verbose
          echo "Documentation built successfully"
          ls -la site/

      - name: Upload artifact
        if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site

  # Deployment job
  deploy:
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4